{"version":3,"sources":["../../src/util/throw-log.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;AACb,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AACnE,IAAI,gBAAgB,GAAG,KAAK,CAAC;AAC7B,IAAI,mBAAmB,GAAG,KAAK,CAAC;;AACzB,SAAS,aAAa,CAAC,MAAM,EAAE;AAClC,oBAAgB,GAAG,MAAM,CAAC;CAC7B;;AACM,SAAS,cAAc,CAAC,MAAM,EAAE;AACnC,uBAAmB,GAAG,MAAM,CAAC;CAChC;;;;;;;AAKM,SAAS,wBAAwB,CAAC,OAAO,EAAE;AAC9C,QAAI,gBAAgB,IAAI,CAAC,YAAY,EAAE;AACnC,cAAM,KAAK,CAAC,OAAO,CAAC,CAAC;KACxB;CACJ;;;;;;;AAKM,SAAS,cAAc,CAAC,OAAO,EAAE;AACpC,QAAI,mBAAmB,EAAE;AACrB,cAAM,KAAK,CAAC,OAAO,CAAC,CAAC;KACxB;CACJ","file":"throw-log.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst experimental = process.argv.indexOf(\"--experimental\") !== -1;\nlet isRunningFromCLI = false;\nlet isRunningFromTester = false;\nexport function setRunningCLI(status) {\n    isRunningFromCLI = status;\n}\nexport function setRunningTest(status) {\n    isRunningFromTester = status;\n}\n/**\n * if current is not experimental, throw error message.\n * @param message\n */\nexport function throwWithoutExperimental(message) {\n    if (isRunningFromCLI && !experimental) {\n        throw Error(message);\n    }\n}\n/**\n * if current is in testing, throw error message.\n * @param message\n */\nexport function throwIfTesting(message) {\n    if (isRunningFromTester) {\n        throw Error(message);\n    }\n}"]}