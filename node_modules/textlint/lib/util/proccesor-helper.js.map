{"version":3,"sources":["../../src/util/proccesor-helper.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;sBACM,QAAQ;;;;AACpB,SAAS,0BAA0B,CAAC,UAAU,EAAE,GAAG,EAAE;AACxD,QAAM,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,UAAA,SAAS,EAAI;;AAEnD,iCAAO,OAAO,SAAS,CAAC,WAAW,CAAC,mBAAmB,KAAK,UAAU,iBACrD,SAAS,CAAC,WAAW,CAAC,IAAI,wCAAqC,CAAC;AACjF,YAAM,OAAO,GAAG,SAAS,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;AAC5D,eAAO,OAAO,CAAC,IAAI,CAAC,UAAA,SAAS;mBAAI,SAAS,KAAK,GAAG,IAAI,AAAC,GAAG,GAAG,SAAS,KAAM,GAAG;SAAA,CAAC,CAAC;KACpF,CAAC,CAAC;AACH,QAAI,eAAe,CAAC,MAAM,EAAE;AACxB,eAAO,eAAe,CAAC,CAAC,CAAC,CAAC;KAC7B;AACD,WAAO,IAAI,CAAC;CACf","file":"proccesor-helper.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport assert from \"assert\";\nexport function getProcessorMatchExtension(processors, ext) {\n    const matchProcessors = processors.filter(processor => {\n        // static availableExtensions() method\n        assert(typeof processor.constructor.availableExtensions === \"function\",\n            `Processor(${processor.constructor.name} should have availableExtensions()`);\n        const extList = processor.constructor.availableExtensions();\n        return extList.some(targetExt => targetExt === ext || (\".\" + targetExt) === ext);\n    });\n    if (matchProcessors.length) {\n        return matchProcessors[0];\n    }\n    return null;\n}\n"]}