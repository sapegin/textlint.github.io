{"version":3,"sources":["../../src/config/config-initializer.js"],"names":[],"mappings":";AACA,YAAY,CAAC;AACb,IAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACpC,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC3C,IAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;;;;AAKzC,IAAM,IAAI,GAAG;;;;;;AAMT,oBAAgB,EAAA,0BAAC,GAAG,EAAE;AAClB,YAAM,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACpD,YAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,OAAO,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACtD,YAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AAC3C,YAAI;AACA,gBAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACzB,sBAAM,IAAI,KAAK,CAAK,MAAM,0BAAwB,CAAC;aACtD;AACD,cAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;SACtC,CAAC,OAAO,KAAK,EAAE;AACZ,kBAAM,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5B,mBAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAC7B;AACD,eAAO,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC7B;CACJ,CAAC;AACF,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC","file":"config-initializer.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nconst Promise = require(\"bluebird\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst Config = require(\"../config/config\");\nconst Logger = require(\"../util/logger\");\n// Public Interface\n/**\n * Initializer class for config of textlint.\n */\nconst init = {\n    /**\n     * Create .textlintrc file\n     * @params {string} dir The directory of .textlintrc file\n     * @returns {int} The exit code for the operation.\n     */\n    initializeConfig(dir) {\n        const rcFile = \".\" + Config.CONFIG_FILE_NAME + \"rc\";\n        const output = JSON.stringify({\"rules\": {}}, null, 2);\n        const filePath = path.resolve(dir, rcFile);\n        try {\n            if (fs.existsSync(filePath)) {\n                throw new Error(`${ rcFile } is already existed.`);\n            }\n            fs.writeFileSync(filePath, output);\n        } catch (error) {\n            Logger.error(error.message);\n            return Promise.resolve(1);\n        }\n        return Promise.resolve(0);\n    }\n};\nmodule.exports = init;\n"]}